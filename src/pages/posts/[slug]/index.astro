---
import { Image } from "astro:assets";
import { render } from "astro:content";
import { Icon } from "astro-icon/components";
import { joinURL } from "ufo";

import MyIcon from "@/assets/my-icon.png";
import PostItem from "@/components/PostItem.astro";
import Tag from "@/components/Tag.astro";
import Title from "@/components/Title.astro";
import BasicLayout from "@/layouts/BasicLayout.astro";
import { getPost, getPosts, postToSlug } from "@/libs/posts";

export async function getStaticPaths() {
	const { posts } = await getPosts({
		draft: true,
	});

	return posts.map((post) => ({
		params: { slug: postToSlug(post) },
	}));
}

const { slug } = Astro.params;
if (!slug) {
	return Astro.rewrite("/404");
}

const post = await getPost(slug);
if (!post) {
	return Astro.rewrite("/404");
}

const intl = new Intl.DateTimeFormat("ja-JP");
const { Content, headings } = await render(post);

const { posts } = await getPosts({ draft: true });
const latestPosts = posts
	.filter((latestPost) => latestPost.id !== post.id)
	.slice(0, 3);

// 最終更新日から1年以上古い場合は、年数を表示する(更新がない場合は公開日)
const lastUpdatedAt = post.data.updatedAt ?? post.data.publishedAt;
const yearsSinceUpdatedAt =
	lastUpdatedAt != null
		? Math.floor(
				(Date.now() - new Date(lastUpdatedAt).getTime()) /
					(1000 * 60 * 60 * 24 * 365),
			)
		: null;
---

<BasicLayout
	title={post.data.title}
	description={null}
	ogImage={joinURL("posts", slug, "og-image.png")}
	ogImageType="large"
>
	<article class="px-4 pb-4 sm:px-8 sm:pb-8">
		<div class="mx-auto grid w-full max-w-4xl justify-center gap-2 sm:gap-4">
			<Title>{post.data.title}</Title>
			<div class="text-center text-sm text-text-secondary">
				{
					post.data.publishedAt ? (
						<>
							<time datetime={new Date(post.data.publishedAt).toISOString()}>
								{intl.format(new Date(post.data.publishedAt))}
							</time>
							公開
						</>
					) : (
						<>未公開</>
					)
				}
				{
					post.data.updatedAt ? (
						<>
							・
							<time datetime={new Date(post.data.updatedAt).toISOString()}>
								{intl.format(new Date(post.data.updatedAt))}
							</time>
							更新
						</>
					) : null
				}
			</div>
			<div class="flex flex-wrap justify-center gap-2">
				{post.data.tags.map((tag) => <Tag tag={tag} />)}
			</div>
		</div>
		<div class="mx-auto flex items-start justify-center gap-4 pt-4 sm:pt-8">
			<div class="grid w-full max-w-4xl gap-4 sm:gap-8">
				<div
					class:list={[
						"markdown max-w-none min-w-0 rounded-2xl border border-border-primary bg-background-primary p-4 shadow-lg prose-neutral sm:px-8 sm:py-6",
					]}
				>
					{
						yearsSinceUpdatedAt != null && yearsSinceUpdatedAt > 0 && (
							<aside class="not-markdown my-4 flex items-center gap-1 rounded-lg border border-warn-border bg-warn-background px-2 py-2 font-bold text-warn-text sm:px-4">
								<Icon name="lucide:triangle-alert" class="size-4 shrink-0" />
								<p>
									この記事は最終更新日から{yearsSinceUpdatedAt}
									年以上が経過しています。
								</p>
							</aside>
						)
					}
					<Content />
				</div>
				<div
					class="grid gap-4 rounded-2xl border border-border-primary bg-background-primary p-4 shadow-lg sm:px-8 sm:py-6"
				>
					<p class="sr-only">書いた人</p>
					<div class="flex items-center gap-4">
						<a href="https://s2n.tech/" target="_blank">
							<Image
								src={MyIcon}
								alt=""
								widths={[80, 160]}
								sizes="80px"
								class="size-20 rounded-full border border-border-primary"
							/>
						</a>
						<div class="flex flex-col gap-2">
							<div class="flex flex-col">
								<a
									href="https://s2n.tech/"
									target="_blank"
									class="text-lg font-bold">しゅん🌙</a
								>
								<a href="https://s2n.tech/" target="_blank" class="text-xs"
									>@shun_shobon</a
								>
							</div>
							<div class="flex gap-2">
								<a
									href="https://github.com/shun-shobon"
									target="_blank"
									class="text-text-secondary transition-colors hover:text-text-primary"
								>
									<Icon
										name="simple-icons:github"
										class="size-5"
										title="GitHub"
									/>
								</a>
								<a
									href="https://x.com/shun_shobon"
									target="_blank"
									class="text-text-secondary transition-colors hover:text-text-primary"
								>
									<Icon name="simple-icons:x" class="size-5" title="X" />
								</a>
							</div>
						</div>
					</div>
				</div>
				<div
					class="grid gap-4 rounded-2xl border border-border-primary bg-background-primary p-4 shadow-lg sm:px-8 sm:py-6"
				>
					<div class="text-xl font-bold kerning-on">最新記事</div>
					<div>
						{latestPosts.map((post) => <PostItem post={post} />)}
					</div>
				</div>
			</div>
			<div
				class="sticky top-8 hidden max-h-[calc(100dvh-var(--spacing)*16)] w-full max-w-xs gap-2 overflow-y-auto rounded-2xl border border-border-primary bg-background-primary p-4 shadow-lg xl:grid"
			>
				<div class="text-lg font-bold kerning-on">目次</div>
				<ul class="list-disc pl-4">
					{
						headings
							.filter((heading) => heading.depth < 3)
							.map((heading) => (
								<li>
									<a
										href={`#${heading.slug}`}
										class="block py-0.5 text-text-secondary transition-colors hover:text-text-primary"
									>
										{heading.text}
									</a>
								</li>
							))
					}
				</ul>
			</div>
		</div>
	</article>
</BasicLayout>
