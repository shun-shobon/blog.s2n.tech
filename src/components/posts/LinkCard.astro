---
import { z } from "astro:schema";
import ogs from "open-graph-scraper";

type Props = z.input<typeof props>;

const props = z.object({
	href: z.string(),
});

const { href } = props.parse(Astro.props);
const url = new URL(href);

let ogResult;
try {
	const { result } = await ogs({ url: href });
	ogResult = result;
} catch {
	/* noop */
}

const title = ogResult?.ogTitle ?? url.hostname;
const description = ogResult?.ogDescription ?? ogResult?.dcDescription;
const favicon =
	ogResult?.favicon ??
	`https://www.google.com/s2/favicons?domain=${url.hostname}`;
const image = ogResult?.ogImage?.[0]?.url;
const imageAspectRatio =
	ogResult?.twitterCard === "summary_large_image" ? "md:aspect-[40/21]" : "";
---

<a
	href={href}
	class="not-markdown my-4 flex h-32 items-center overflow-hidden rounded-lg border border-border-secondary bg-background-primary transition-colors hover:bg-background-secondary"
	aria-label={title}
>
	<div class="grid grow gap-1 p-4">
		<span class="line-clamp-2 font-bold">{title}</span>
		{
			description && (
				<span class="line-clamp-2 text-sm text-text-secondary">
					{description}
				</span>
			)
		}
		<span class="flex min-w-0 items-center gap-1 text-xs text-text-secondary"
			><img src={favicon} alt="" class="size-4 shrink-0" decoding="async" loading="lazy" /><span
				class="overflow-hidden text-nowrap text-ellipsis">{url.hostname}</span
			></span
		>
	</div>
	<div class:list={["aspect-square h-full w-auto shrink-0 border-l border-border-secondary bg-background-tertiary", image ? imageAspectRatio : "md:aspect-[40/21]"]}>
		{image && (
			<img
				src={image}
				alt=""
				decoding="async"
				loading="lazy"
				class:list={["size-full object-cover", imageAspectRatio]}
			/>
		)}
	</div>
</a>
